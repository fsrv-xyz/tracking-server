---
services:
  tracs0r-postgresql:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tracs0r
    networks:
      - proxy

  tracs0r-database:
    container_name: database-${CI_COMMIT_REF_SLUG}.${CI_COMMIT_SHORT_SHA}.${CI_PROJECT_NAME}
    build:
      context: ../
      dockerfile: Dockerfile-database
    environment:
      - DATABASE_HOST=tracs0r-postgresql
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=tracs0r
    networks:
      - proxy

  tracs0r-ingress:
    container_name: ingress-${CI_COMMIT_REF_SLUG}.${CI_COMMIT_SHORT_SHA}.${CI_PROJECT_NAME}
    build:
      context: ../
      dockerfile: Dockerfile-ingress
    ports:
      - 2039:8080
    networks:
      - proxy
    links:
      - tracs0r-database
    environment:
      - SENTRY_DSN=${REVIEW_SENTRY_DSN}
      - DATABASE_GRPC_ADDRESS=database-${CI_COMMIT_REF_SLUG}.${CI_COMMIT_SHORT_SHA}.${CI_PROJECT_NAME}:50051
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tracs0r-ingress-${CI_COMMIT_SHORT_SHA}.rule=Host(`ingress-${CI_COMMIT_REF_SLUG}.${CI_PROJECT_NAME}.wwwtest.org`)"
      - "traefik.http.routers.tracs0r-ingress-${CI_COMMIT_SHORT_SHA}.entrypoints=web"
      - "traefik.http.routers.tracs0r-ingress-${CI_COMMIT_SHORT_SHA}.middlewares=custom-source-header@file"
      - "traefik.http.services.tracs0r-ingress-${CI_COMMIT_SHORT_SHA}.loadbalancer.server.port=8080"
networks:
  proxy:
    external: true

